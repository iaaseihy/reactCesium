{"version":3,"sources":["page/splitDirection/index.js","data/config.js","page/cesiumViewer/index.js","page/cesiumViewerContact/index.js","router/index.js","App.js","reportWebVitals.js","index.js","page/cesiumViewer/index.module.less","page/cesiumViewerContact/index.module.less","page/splitDirection/index.module.less","../../node_modules/cesium/Source/Core sync"],"names":["Component","global","constants","website","name","dragStartX","cesiumViewerContact","props","state","this","initViewer","window","viewer","Cesium","defaultAccessToken","options","selectionIndicator","animation","baseLayerPicker","geocoder","timeline","navigationHelpButton","homeButton","sceneModePicker","infoBox","navigation","creditContainer","fullscreenButton","imageryProvider","url","tilingScheme","fileExtension","minimumLevel","maxmumLevel","_cesiumWidget","_creditContainer","style","display","ArcGisMap","viewerEye","scene3DOnly","sceneL","scene","sceneR","handlerL","canvas","handlerR","globe","ellipsoid","isLeftTrigger","isRightTrigger","setInputAction","movement","MOUSE_MOVE","syncViewerL","camera","flyTo","destination","position","orientation","heading","pitch","roll","duration","changed","addEventListener","preRender","syncViewerR","id","className","cesiumViewerContactStyle","cesiumContainer","cesiumContainerRight","Router","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve"],"mappings":"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","file":"static/js/main.cc8e788a.chunk.js","sourcesContent":["/* eslint-disable no-unused-expressions */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable react/style-prop-object */\r\n/** 组件样式文件 */\r\nimport splitDirection from './index.module.less';\r\n/** 从react中获取React对象 和 Components组件 */\r\nimport React, { Component } from 'react';\r\n/** 导入cesium模块 */\r\nimport * as Cesium from 'cesium/Cesium'\r\nimport '../../data/config'\r\n/** 使用react的Component组件对象自定义splitViewer组件 */\r\nexport default class splitViewer extends Component {\r\n \r\n  /** 数据初始化 */\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {}\r\n     // 手动绑定 this,直接传递 function 作为 event handler 需要指定函数的执行环境，即需要手动绑定 this ，不然会报 this 为 undefined 的错\r\n    this.mouseUp = this.mouseUp.bind(this);\r\n    this.mouseDown = this.mouseDown.bind(this);\r\n    this.sliderMove = this.sliderMove.bind(this);\r\n  }\r\n \r\n  /** dom完成第一次渲染执行函数 */\r\n  componentDidMount() {\r\n \r\n    // this.initMap()\r\n    this.initViewer()\r\n  }\r\n \r\n  /** 初始化地图 */\r\n  initMap() {\r\n    // 将viewer对象放在window环境下\r\n    window.viewer  = new Cesium.Viewer('cesiumContainer')\r\n  \r\n  }\r\n  mouseUp() {\r\n    window.removeEventListener('mousemove', this.sliderMove, true);\r\n  }\r\n  mouseDown(e) {\r\n    var slider = document.getElementById('slider');\r\n    global.constants.dragStartX = e.clientX - slider.offsetLeft;\r\n    window.addEventListener('mousemove', this.sliderMove, true);\r\n  }\r\n  sliderMove(e) {\r\n    var slider = document.getElementById('slider');\r\n    var splitPosition = (e.clientX - global.constants.dragStartX) / slider.parentElement.offsetWidth;\r\n    slider.style.left = 100.0 * splitPosition + '%';\r\n    window.viewer.scene.imagerySplitPosition = splitPosition;\r\n  }\r\n  initViewer() {\r\n    Cesium.Ion.defaultAccessToken =\r\n      'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIyOWI4NmU3MS0wNjMwLTRkYzgtODZmOC0wY2IxYzRiYjM3MjciLCJpZCI6MjA5NjIsInNjb3BlcyI6WyJhc3IiLCJnYyJdLCJpYXQiOjE1Nzg2MjM2MDB9.1N0686jkepigCJiLU3bDFgg5Ti61J943lKpJoqDR2bA'\r\n    const options = {\r\n      selectionIndicator: false,\r\n      animation: false, // 是否显示动画控件\r\n      baseLayerPicker: false, // 是否显示图层选择控件\r\n      geocoder: false, // 是否显示地名查找控件\r\n      timeline: false, // 是否显示时间线控件\r\n      navigationHelpButton: false, // 是否显示帮助信息控件\r\n      homeButton: false,\r\n      sceneModePicker: false,\r\n      infoBox: false,\r\n      navigation: false,\r\n      creditContainer: null,\r\n      fullscreenButton: false\r\n    }\r\n   \r\n    // options.imageryProvider = new Cesium.SingleTileImageryProvider({\r\n    //  url: baseLayerImg\r\n    // })\r\n    // options.imageryProvider = new Cesium.UrlTemplateImageryProvider({\r\n    //   // url: 'http://172.17.20.27:6060/tms_b_map/{z}/{x}/{y}.jpg',\r\n    //   url: 'http://192.168.1.48:6060/Data/BASE_DATA/IMAGE/{z}/{x}/{y}.png',\r\n    //   fileExtension: 'jpg'\r\n    // })\r\n    options.imageryProvider = new Cesium.UrlTemplateImageryProvider({\r\n      url: 'http://localhost:6060/Data/BASE_DATA/IMAGE/{z}/{x}/{y}.png',\r\n      // eslint-disable-next-line no-undef\r\n      tilingScheme: new Cesium.WebMercatorTilingScheme(),\r\n      fileExtension: 'png',\r\n      minimumLevel: 0,\r\n      maxmumLevel: 19\r\n    })\r\n    // options.terrainProvider = new Cesium.CesiumTerrainProvider({\r\n    //   url: 'http://localhost:6060/Data/BASE_DATA/TERRIAN',\r\n    //   requestWaterMask: true,\r\n    //   requestVertexNormals: true\r\n    // })\r\n\r\n    const viewer  = new Cesium.Viewer('cesiumContainer', options)\r\n    viewer._cesiumWidget._creditContainer.style.display = 'none'\r\n    window.viewer = viewer       \r\n\r\n    var ArcGisMap = new Cesium.UrlTemplateImageryProvider({\r\n        //调用深蓝夜色影像服务 \r\n        url: \"https://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/{z}/{y}/{x}\"\r\n    })\r\n\r\n    var layers = viewer.imageryLayers;\r\n    var googleLayer = layers.addImageryProvider(ArcGisMap);\r\n    googleLayer.splitDirection = Cesium.ImagerySplitDirection.LEFT;//设置图层在左侧\r\n\r\n    var slider = document.getElementById('slider');\r\n    viewer.scene.imagerySplitPosition = (slider.offsetLeft) / slider.parentElement.offsetWidth;\r\n    global.constants.dragStartX = 0;\r\n    document.getElementById('slider').addEventListener('mousedown', this.mouseDown, false);\r\n    window.addEventListener('mouseup', this.mouseUp, false);\r\n    return viewer\r\n  }\r\n  /** 逻辑渲染 */\r\n  render() {   \r\n    // 构建虚拟dom\r\n    return (\r\n      <><div id=\"cesiumContainer\" className={splitDirection.cesiumContainer}>     \r\n            <div id=\"slider\" className={splitDirection.slider}></div>\r\n        <div id=\"creditContainer\"></div>      \r\n            </div>\r\n            </>\r\n    )\r\n  }\r\n}","global.constants = {\r\n    website:'http://www.baidu.com/',\r\n    name:'百度',\r\n    dragStartX: 0,\r\n};","/* eslint-disable no-undef */\r\n/* eslint-disable react/style-prop-object */\r\n/** 组件样式文件 */\r\nimport cesiumViewerStyle from './index.module.less';\r\n/** 从react中获取React对象 和 Components组件 */\r\nimport React, { Component } from 'react';\r\n/** 导入cesium模块 */\r\nimport * as Cesium from 'cesium/Cesium'\r\n \r\n/** 使用react的Component组件对象自定义map3d组件 */\r\nexport default class cesiumViewer extends Component {\r\n \r\n  /** 数据初始化 */\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n \r\n  /** dom完成第一次渲染执行函数 */\r\n  componentDidMount() {\r\n \r\n    // this.initMap()\r\n    this.initViewer()\r\n  }\r\n \r\n  /** 初始化地图 */\r\n  initMap() {\r\n    // 将viewer对象放在window环境下\r\n    window.viewer  = new Cesium.Viewer('cesiumContainer')\r\n  \r\n  }\r\n  initViewer() {\r\n    Cesium.Ion.defaultAccessToken =\r\n      'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIyOWI4NmU3MS0wNjMwLTRkYzgtODZmOC0wY2IxYzRiYjM3MjciLCJpZCI6MjA5NjIsInNjb3BlcyI6WyJhc3IiLCJnYyJdLCJpYXQiOjE1Nzg2MjM2MDB9.1N0686jkepigCJiLU3bDFgg5Ti61J943lKpJoqDR2bA'\r\n    const options = {\r\n      selectionIndicator: false,\r\n      animation: false, // 是否显示动画控件\r\n      baseLayerPicker: false, // 是否显示图层选择控件\r\n      geocoder: false, // 是否显示地名查找控件\r\n      timeline: false, // 是否显示时间线控件\r\n      navigationHelpButton: false, // 是否显示帮助信息控件\r\n      homeButton: false,\r\n      sceneModePicker: false,\r\n      infoBox: false,\r\n      navigation: false,\r\n      creditContainer: null,\r\n      fullscreenButton: false\r\n    }\r\n   \r\n    // options.imageryProvider = new Cesium.SingleTileImageryProvider({\r\n    //  url: baseLayerImg\r\n    // })\r\n    // options.imageryProvider = new Cesium.UrlTemplateImageryProvider({\r\n    //   // url: 'http://172.17.20.27:6060/tms_b_map/{z}/{x}/{y}.jpg',\r\n    //   url: 'http://192.168.1.48:6060/Data/BASE_DATA/IMAGE/{z}/{x}/{y}.png',\r\n    //   fileExtension: 'jpg'\r\n    // })\r\n    options.imageryProvider = new Cesium.UrlTemplateImageryProvider({\r\n      url: 'http://localhost:6060/Data/BASE_DATA/IMAGE/{z}/{x}/{y}.png',\r\n      // eslint-disable-next-line no-undef\r\n      tilingScheme: new Cesium.WebMercatorTilingScheme(),\r\n      fileExtension: 'png',\r\n      minimumLevel: 0,\r\n      maxmumLevel: 19\r\n    })\r\n    // options.terrainProvider = new Cesium.CesiumTerrainProvider({\r\n    //   url: 'http://localhost:6060/Data/BASE_DATA/TERRIAN',\r\n    //   requestWaterMask: true,\r\n    //   requestVertexNormals: true\r\n    // })\r\n\r\n    const viewer  = new Cesium.Viewer('cesiumContainer', options)\r\n    viewer._cesiumWidget._creditContainer.style.display = 'none'\r\n    window.viewer = viewer    \r\n\r\n    var ArcGisMap = new Cesium.UrlTemplateImageryProvider({\r\n        //调用深蓝夜色影像服务 \r\n        url: \"https://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/{z}/{y}/{x}\"\r\n    })\r\n    // 用于联动的viewer\r\n    var viewerEye = new Cesium.Viewer('cesiumContainerR', {\r\n\r\n        imageryProvider: ArcGisMap,\r\n\r\n        creditContainer: \"creditContainerR\",\r\n\r\n        scene3DOnly: true,\r\n\r\n        baseLayerPicker: false,\r\n\r\n        infoBox: false,\r\n\r\n        selectionIndicator: false,\r\n\r\n        geocoder: false, // 是否显示地名查找控件\r\n\r\n        navigationHelpButton: false, // 是否显示帮助信息控件\r\n\r\n        homeButton: false,\r\n\r\n        timeline: false,\r\n\r\n        animation: false,\r\n\r\n    });\r\n    viewerEye._cesiumWidget._creditContainer.style.display = 'none'\r\n    var control = viewerEye.scene.screenSpaceCameraController;\r\n\r\n    control.enableRotate = false;\r\n\r\n    control.enableTranslate = false;\r\n\r\n    control.enableZoom = false;\r\n\r\n    control.enableTilt = false;\r\n\r\n    control.enableLook = false;\r\n\r\n    var syncViewer = function () {\r\n\r\n        viewerEye.camera.flyTo({\r\n\r\n            destination: viewer.camera.position,\r\n\r\n            orientation: {\r\n\r\n                heading: viewer.camera.heading,\r\n\r\n                pitch: viewer.camera.pitch,\r\n\r\n                roll: viewer.camera.roll\r\n\r\n            },\r\n\r\n            duration: 0.0\r\n\r\n        });\r\n\r\n    }\r\n\r\n    viewer.camera.changed.addEventListener(syncViewer);\r\n\r\n    viewer.scene.preRender.addEventListener(syncViewer);\r\n\r\n    return viewer\r\n  }\r\n  /** 逻辑渲染 */\r\n  render() {\r\n    \r\n    // 构建虚拟dom\r\n    return (\r\n    //   <div className={ map3DStyle.viewer } >\r\n    //     <div id=\"cesiumContainer\" className={ map3DStyle.cesiumContainer } ></div>\r\n    //   </div>\r\n      <>\r\n               {/* <div className={ map3DStyle.viewer } >\r\n                 <div id=\"cesiumContainer\" className={ map3DStyle.cesiumContainer } ></div>\r\n               </div> */}\r\n            <div id=\"cesiumContainer\" className={cesiumViewerStyle.cesiumContainer}>           \r\n            </div>\r\n            <div id=\"cesiumContainerR\" className={cesiumViewerStyle.cesiumContainerRight}>\r\n                <div id=\"creditContainerR\" ></div>\r\n            </div>\r\n            </>\r\n    )\r\n  }\r\n}","/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable react/style-prop-object */\r\n/** 组件样式文件 */\r\nimport cesiumViewerContactStyle from './index.module.less';\r\n/** 从react中获取React对象 和 Components组件 */\r\nimport React, { Component } from 'react';\r\n/** 导入cesium模块 */\r\nimport * as Cesium from 'cesium/Cesium'\r\n \r\n/** 使用react的Component组件对象自定义map3d组件 */\r\nexport default class cesiumViewerContact extends Component {\r\n \r\n  /** 数据初始化 */\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n \r\n  /** dom完成第一次渲染执行函数 */\r\n  componentDidMount() {\r\n \r\n    // this.initMap()\r\n    this.initViewer()\r\n  }\r\n \r\n  /** 初始化地图 */\r\n  initMap() {\r\n    // 将viewer对象放在window环境下\r\n    window.viewer  = new Cesium.Viewer('cesiumContainer')\r\n  \r\n  }\r\n  initViewer() {\r\n    Cesium.Ion.defaultAccessToken =\r\n      'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIyOWI4NmU3MS0wNjMwLTRkYzgtODZmOC0wY2IxYzRiYjM3MjciLCJpZCI6MjA5NjIsInNjb3BlcyI6WyJhc3IiLCJnYyJdLCJpYXQiOjE1Nzg2MjM2MDB9.1N0686jkepigCJiLU3bDFgg5Ti61J943lKpJoqDR2bA'\r\n    const options = {\r\n      selectionIndicator: false,\r\n      animation: false, // 是否显示动画控件\r\n      baseLayerPicker: false, // 是否显示图层选择控件\r\n      geocoder: false, // 是否显示地名查找控件\r\n      timeline: false, // 是否显示时间线控件\r\n      navigationHelpButton: false, // 是否显示帮助信息控件\r\n      homeButton: false,\r\n      sceneModePicker: false,\r\n      infoBox: false,\r\n      navigation: false,\r\n      creditContainer: null,\r\n      fullscreenButton: false\r\n    }\r\n   \r\n    // options.imageryProvider = new Cesium.SingleTileImageryProvider({\r\n    //  url: baseLayerImg\r\n    // })\r\n    // options.imageryProvider = new Cesium.UrlTemplateImageryProvider({\r\n    //   // url: 'http://172.17.20.27:6060/tms_b_map/{z}/{x}/{y}.jpg',\r\n    //   url: 'http://192.168.1.48:6060/Data/BASE_DATA/IMAGE/{z}/{x}/{y}.png',\r\n    //   fileExtension: 'jpg'\r\n    // })\r\n    options.imageryProvider = new Cesium.UrlTemplateImageryProvider({\r\n      url: 'http://localhost:6060/Data/BASE_DATA/IMAGE/{z}/{x}/{y}.png',\r\n      // eslint-disable-next-line no-undef\r\n      tilingScheme: new Cesium.WebMercatorTilingScheme(),\r\n      fileExtension: 'png',\r\n      minimumLevel: 0,\r\n      maxmumLevel: 19\r\n    })\r\n    // options.terrainProvider = new Cesium.CesiumTerrainProvider({\r\n    //   url: 'http://localhost:6060/Data/BASE_DATA/TERRIAN',\r\n    //   requestWaterMask: true,\r\n    //   requestVertexNormals: true\r\n    // })\r\n\r\n    const viewer  = new Cesium.Viewer('cesiumContainer', options)\r\n    viewer._cesiumWidget._creditContainer.style.display = 'none'\r\n    window.viewer = viewer    \r\n\r\n    var ArcGisMap = new Cesium.UrlTemplateImageryProvider({\r\n        //调用深蓝夜色影像服务 \r\n        url: \"https://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/{z}/{y}/{x}\"\r\n    })\r\n    // 用于联动的viewer\r\n    var viewerEye = new Cesium.Viewer('cesiumContainerR', {\r\n\r\n        imageryProvider: ArcGisMap,\r\n\r\n        creditContainer: \"creditContainerR\",\r\n\r\n        scene3DOnly: true,\r\n\r\n        baseLayerPicker: false,\r\n\r\n        infoBox: false,\r\n\r\n        selectionIndicator: false,\r\n\r\n        geocoder: false, // 是否显示地名查找控件\r\n\r\n        navigationHelpButton: false, // 是否显示帮助信息控件\r\n\r\n        homeButton: false,\r\n\r\n        timeline: false,\r\n\r\n        animation: false,\r\n\r\n    });\r\n    viewerEye._cesiumWidget._creditContainer.style.display = 'none'\r\n\r\n    var sceneL = viewer.scene;\r\n    var sceneR = viewerEye.scene;\r\n\r\n    var handlerL = new Cesium.ScreenSpaceEventHandler(sceneL.canvas);\r\n    var ellipsoidL = sceneL.globe.ellipsoid;\r\n    var handlerR = new Cesium.ScreenSpaceEventHandler(sceneR.canvas);\r\n    var ellipsoidR = sceneR.globe.ellipsoid;\r\n\r\n    var isLeftTrigger = false;\r\n    var isRightTrigger = false;\r\n\r\n    handlerL.setInputAction(function (movement) {\r\n        isLeftTrigger = true;\r\n        isRightTrigger = false;\r\n    }, Cesium.ScreenSpaceEventType.MOUSE_MOVE);\r\n\r\n    handlerR.setInputAction(function (movement) {\r\n        isLeftTrigger = false;\r\n        isRightTrigger = true;\r\n    }, Cesium.ScreenSpaceEventType.MOUSE_MOVE);   \r\n\r\n    var syncViewerL = function () {\r\n        if (isLeftTrigger) {\r\n            viewerEye.camera.flyTo({\r\n                destination: viewer.camera.position,\r\n                orientation: {\r\n                    heading: viewer.camera.heading,\r\n                    pitch: viewer.camera.pitch,\r\n                    roll: viewer.camera.roll\r\n                },\r\n                duration: 0.0\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    viewer.camera.changed.addEventListener(syncViewerL);\r\n    viewer.scene.preRender.addEventListener(syncViewerL);\r\n\r\n    var syncViewerR = function () {\r\n        if (isRightTrigger) {\r\n            viewer.camera.flyTo({\r\n                destination: viewerEye.camera.position,\r\n                orientation: {\r\n                    heading: viewerEye.camera.heading,\r\n                    pitch: viewerEye.camera.pitch,\r\n                    roll: viewerEye.camera.roll\r\n                },\r\n                duration: 0.0\r\n            });\r\n        }\r\n    }\r\n\r\n    viewer.camera.changed.addEventListener(syncViewerR);\r\n    viewer.scene.preRender.addEventListener(syncViewerR);\r\n\r\n    return viewer\r\n  }\r\n  /** 逻辑渲染 */\r\n  render() {\r\n    \r\n    // 构建虚拟dom\r\n    return (\r\n    //   <div className={ map3DStyle.viewer } >\r\n    //     <div id=\"cesiumContainer\" className={ map3DStyle.cesiumContainer } ></div>\r\n    //   </div>\r\n      <>\r\n               {/* <div className={ map3DStyle.viewer } >\r\n                 <div id=\"cesiumContainer\" className={ map3DStyle.cesiumContainer } ></div>\r\n               </div> */}\r\n            <div id=\"cesiumContainer\" className={cesiumViewerContactStyle.cesiumContainer}>           \r\n            </div>\r\n            <div id=\"cesiumContainerR\" className={cesiumViewerContactStyle.cesiumContainerRight}>\r\n                <div id=\"creditContainerR\" ></div>\r\n            </div>\r\n            </>\r\n    )\r\n  }\r\n}","/* eslint-disable no-unused-vars */\r\n/** 从react中获取React对象 和 Components组件 */\r\nimport React, { Component } from 'react'\r\n/** 添加react路由对象 实现单页面跳转*/\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\n/** 导入自定义组件 */\r\n// import Map3D from '../page/Map3D'\r\n// 鹰眼页面\r\nimport cesiumViewer from '../page/cesiumViewer/index'\r\n// 鹰眼联动页面\r\nimport cesiumViewerContact from '../page/cesiumViewerContact/index'\r\n// 卷帘页面\r\nimport splitViewer from '../page/splitDirection/index'\r\n/** 导出router路由组件 */\r\nexport default class Router extends Component {\r\n\r\n  /**\r\n   * \r\n   *\r\n     1. 挂载卸载过程\r\n      1.1.constructor()  创建原型 _proto_ 数据的初始化\r\n      1.2.componentWillMount() dom渲染前 constructor()初始化数据后，但是还未渲染DOM时\r\n      1.3.componentDidMount()  组件第一次渲染完成，此时dom节点已经生成\r\n      1.4.componentWillUnmount () 组件的卸载和数据的销毁\r\n        clear你在组建中所有的setTimeout,setInterval\r\n        移除所有组建中的监听 removeEventListener\r\n        有时候我们会碰到这个warning: Can only update a mounted or mounting component. This usuall\r\n             因为你在组件中的ajax请求返回setState,而你组件销毁的时候，请求还未完成，因此会报warning\r\n \r\n    2. 更新过程\r\n      2.1. componentWillReceiveProps (nextProps) \r\n        在接受父组件改变后的props需要重新渲染组件时用到的比较多\r\n        接受一个参数nextProps\r\n        通过对比nextProps和this.props，将nextProps的state为当前组件的state，从而重新渲染组件\r\n\r\n      2.2.shouldComponentUpdate(nextProps,nextState)\r\n        主要用于性能优化(部分更新)\r\n        唯一用于控制组件重新渲染的生命周期，由于在react中，setState以后，state发生变化，组件会进入重新渲染的流程，在这里return false可以阻止组件的更新\r\n        因为react父组件的重新渲染会导致其所有子组件的重新渲染，这个时候其实我们是不需要所有子组件都跟着重新渲染的，因此需要在子组件的该生命周期中做判断\r\n\r\n      2.3.componentWillUpdate (nextProps,nextState)\r\n        shouldComponentUpdate返回true以后，组件进入重新渲染的流程，进入componentWillUpdate,这里同样可以拿到nextProps和nextState。\r\n\r\n      2.4.componentDidUpdate(prevProps,prevState)\r\n        组件更新完毕后，react只会在第一次初始化成功会进入componentDidmount,之后每次重新渲染后都会进入这个生命周期，\r\n        这里可以拿到prevProps和prevState，即更新前的props和state\r\n\r\n      2.5.render()\r\n        render函数会插入jsx生成的dom结构，react会生成一份虚拟dom树，在每一次组件更新时，\r\n        在此react会通过其diff算法比较更新前后的新旧DOM树，比较以后，找到最小的有差异的DOM节点，并重新渲染。\r\n\r\n    3. React新增的生命周期(个人补充)\r\n      3.1. getDerivedStateFromProps(nextProps, prevState)\r\n          代替componentWillReceiveProps()\r\n          老版本中的componentWillReceiveProps()方法判断前后两个 props 是否相同，如果不同再将新的 props 更新到相应的 state 上去。\r\n          这样做一来会破坏 state 数据的单一数据源，导致组件状态变得不可预测，另一方面也会增加组件的重绘次数。\r\n      \r\n      3.2. getSnapshotBeforeUpdate(prevProps, prevState)\r\n        代替componentWillUpdate。\r\n        常见的 componentWillUpdate 的用例是在组件更新前，读取当前某个 DOM 元素的状态，并在 componentDidUpdate 中进行相应的处理。\r\n   * \r\n   */\r\n\r\n  /** recat逻辑渲染 */\r\n  render() {\r\n\r\n    return (\r\n      /** BrowserRouter基于url的pathname跳转   HashRouter基于Hash跳转 */\r\n      <BrowserRouter>\r\n        {/**  <Switch>是唯一的因为它仅仅只会渲染一个路径。相比之下（不使用<Switch>包裹的情况下），每一个被location匹配到的<Route>将都会被渲染 */}\r\n        <Switch>\r\n          {/** 路由对象 指定组件路径 */}\r\n          {/* <Route path=\"/\" component={ splitViewer } />\r\n          <Route path=\"/cesiumViewer\" component={ cesiumViewer } /> */}\r\n          <Route path=\"/\" component={ cesiumViewerContact } />         \r\n        </Switch>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n\r\n","/* eslint-disable no-unused-vars */\n// import logo from './logo.svg';\n// import { hot } from 'react-hot-loader/root'\nimport './App.css';\nimport React, {Component} from 'react'\nimport Router from './router/index'\n\nexport default class App extends Component{\n  render() {\n    return (\n      <Router></Router>\n    )\n  }\n}\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// // export default App;\n// export default process.env.NODE_ENV === 'development' ? hot(App) : App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/cesium/Source/Widgets/widgets.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cesiumContainer\":\"index_cesiumContainer__3-DL9\",\"cesiumContainerRight\":\"index_cesiumContainerRight__2C2MR\",\"cesiumContainerRight1\":\"index_cesiumContainerRight1__eN30f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cesiumContainer\":\"index_cesiumContainer__23qHa\",\"cesiumContainerRight\":\"index_cesiumContainerRight__236t1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cesiumContainer\":\"index_cesiumContainer__1-pi-\",\"slider\":\"index_slider__3Xi-y\",\"creditContainer\":\"index_creditContainer__3i6nN\"};","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 78;"],"sourceRoot":""}